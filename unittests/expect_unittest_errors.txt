>> ( -- test that the correct errors are caught and reported -- )
=> 
>> ( -- Copyright (c) 2022 Frank McIngvale, see LICENSE -- )
=> 
>> ( -- this is split off from unittest_core since it was -- )
=> 
>> ( -- getting hard to read the results with a mix of errors -- )
=> 
>> ( -- and non-errors -- also now I could add a command line option -- )
=> 
>> ( -- along with -test to say stop on errors for the non-error cases -- )
=> 
>> ( -- another benefit is that the non-error testcases can be run -- )
=> 
>> ( -- without -test and can run to completion -- )
=> 
>> ( -- side note: multiline comments are fine normally, they just have to be single line in -- )
=> 
>> ( -- -test mode since it processes one line at a time so it can restart on errors -- )
=> 
>> ( cause error in math operations )
=> 
>> 1 +
*** Stack underflow ***
>> 2 -
*** Stack underflow ***
>> 3 *
*** Stack underflow ***
>> 4 /
*** Stack underflow ***
>> clear
=> 
>> +
*** Stack underflow ***
>> ( integer overflows )
=> 
>> 1073741824
*** Integer overflow ***
>> -1073741824
*** Integer overflow ***
>> 1073741823 1 +
*** Integer overflow ***
>> -1073741823 1 -
*** Integer overflow ***
>> 583923 1839 *
*** Integer overflow ***
>> 583923 -1839 *
*** Integer overflow ***
>> ( divide by zero )
=> 
>> 4 0 /
*** Divide by zero ***
>> -8 0 /
*** Divide by zero ***
>> ( parsing errors )
=> 
>> : aaa 123 456
*** Unexpected end of input looking for ';' ***
>> ( bad comment
*** Unexpected end of input inside comment ***
>> ( interpreter errors )
=> 
>> foobarbadword
*** Unknown word foobarbadword ***
>> ( locals underflow )
=> 
>> 10 20 30 
=> 10 20 30 
>> >L >L >L
=> 
>> >L
*** Stack underflow ***
>> ( show that trying to redefine a name fails )
=> 
>> var fff 4
=> 
>> var fff 1
*** Trying to redefine variable fff ***
>> ( however, show that a word can be deleted and THEN redefined ... )
=> 
>> : zzz 10 20 30 ;
=> 
>> : zzz 40 50 60 ;
*** Trying to redefine name: zzz ***
>> ( that should have crashed & restarted, so set it up again then delete first ... )
=> 
>> : zzz 10 20 30 ;
=> 
>> del zzz
=> 
>> : zzz 40 50 60 ;
=> 
>> ( now same with var - already tested crash case above )
=> 
>> var yyyy 11
=> 
>> del yyyy
=> 
>> var yyyy 18
=> 
>> ( deleting non existant var should fail )
=> 
>> del ggg
*** Trying to delete non-existent name: ggg ***
>> ( end of input inside " )
=> 
>> "hello world oops ...
*** Unexpected end of input in string near: "hello world oops ...  ***
>> ( end of input inside { .. )
=> 
>> { a lambda here uh oh
*** Unexpected end of input inside { .. } ***
>> ( throw error from script )
=> 
>> "Testing errors" error
*** Testing errors ***
