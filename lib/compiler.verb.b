L 30
W reader-open-string
L 10
y READER_TEXT
y set!
y READER_TEXT
y ref
y length
y READER_TEXT_LEN
y set!
i 0
y READER_POS
y set!
W reader-open-file
L 2
y read-file
y reader-open-string
W reader-peek-char
L 15
y READER_POS
y ref
y READER_TEXT_LEN
y ref
y >=
y if
y >>eof
y READER_TEXT
y ref
y READER_POS
y ref
y get
y return
y @eof
y null
W reader-next-char
L 21
y READER_POS
y ref
y READER_TEXT_LEN
y ref
y >=
y if
y >>eof
y READER_TEXT
y ref
y READER_POS
y ref
y get
y READER_POS
y ref
i 1
y +
y READER_POS
y set!
y return
y @eof
y null
W reader-next
L 72
s 
y @skipws
y reader-peek-char
y dup
y null?
y if
y >>null-on-read
y ord
i 32
y >
y if
y >>word-loop
y reader-next-char
y drop
y <<skipws
y @null-on-read
y drop
y >>eof
y @word-loop
y reader-next-char
y dup
y null?
y if
y <<null-on-read
y dup
y ord
i 32
y <=
y if
y >>space
y +
y <<word-loop
y @skip-comment
y drop
y @skip-comment-loop
y reader-next-char
y dup
y null?
y if
y >>found-eol
y dup
y ord
i 13
y ==
y if
y >>found-eol
y dup
y ord
i 10
y ==
y if
y >>found-eol
y drop
y <<skip-comment-loop
y @found-eol
y drop
y <<skipws
y @space
y drop
y @eof
y dup
y length
i 0
y ==
y if
y >>isnull
y string->symbol
y return
y @isnull
y drop
y null
y return
W digit?
L 34
y dup
y string?
y if
y >>string
y dup
y '0
y <
y if
y >>notdigit
y dup
y '9
y >
y if
y >>notdigit
y drop
y true
y return
y @string
y dup
s 0
y <
y if
y >>notdigit
y dup
s 9
y >
y if
y >>notdigit
y drop
y true
y return
y @notdigit
y drop
y false
W any-digits?
L 2
F
L 1
y digit?
y any
W ltrim-char
L 12
y >L
i 0
y +get
y L>
y ==
y if
y >>trim
y return
y @trim
i 1
i -1
y slice
W ltrim-sign
L 17
i 0
y +get
s +
y ==
y if
y >>trim
i 0
y +get
s -
y ==
y if
y >>trim
y return
y @trim
i 1
i -1
y slice
W ltrim-digits
L 18
y @loop
y dup
y length
i 0
y ==
y if
y >>done
i 0
y +get
y digit?
y not
y if
y >>done
i 1
i -1
y slice
y <<loop
y @done
W int-string?
L 14
y dup
y any-digits?
y not
y if
y >>nodigits
y ltrim-sign
y ltrim-digits
y length
i 0
y ==
y return
y @nodigits
y drop
y false
W int-symbol?
L 3
y unmake
y make-string
y int-string?
W float-string?
L 21
y dup
y any-digits?
y not
y if
y >>nodigits
y ltrim-sign
y ltrim-digits
s .
y ltrim-char
y ltrim-digits
s e
y ltrim-char
y ltrim-sign
y ltrim-digits
y length
i 0
y ==
y return
y @nodigits
y drop
y false
W float-symbol?
L 3
y unmake
y make-string
y float-string?
W syntax-next
L 78
y reader-next
y dup
y null?
y if
y >>null
y dup
y '(
y ==
y if
y >>comment
y dup
y '{
y ==
y if
y >>lambda
y dup
y ':
y ==
y if
y >>worddef
y dup
y 'def
y ==
y if
y >>worddef
y dup
i 0
y get
y '"
y ==
y if
y >>string
y dup
y int-symbol?
y if
y >>integer
y dup
i 0
y get
y '#
y !=
y if
y >>nomatch
y dup
i 1
i -1
y slice
y float-symbol?
y if
y >>float
y @nomatch
y return
y @null
y return
y @worddef
y drop
y syntax-define-word
y return
y @comment
y drop
y syntax-comment
y return
y @lambda
y drop
y syntax-lambda
y return
y @string
y syntax-string
y return
y @integer
y parse-int
y return
y @float
i 1
i -1
y slice
y parse-float
y return
W syntax-define-word
L 41
y syntax-next
y dup
y symbol?
y not
y if
y >>badname
y >L
y SP
y >L
y @loop
y syntax-next
y dup
y null?
y if
y >>eof
y dup
y ';
y ==
y if
y >>endword
y <<loop
y @badname
y repr
s Invalid%32name%32after%32':'%32:%32
y swap
y +
y error
y @eof
s Unexpected%32end%32of%32input%32looking%32for%32';'
y error
y @endword
y drop
y L>
y SP
y -
i 1
y -
y make-list
y L>
y save-defined-word
y syntax-next
W syntax-string
L 66
y >L
y L0
y ref
i -1
y get
y '"
y ==
y L0
y ref
y length
i 1
y >
y and
y if
y >>endstring
y @loop
y L0
y ref
i 32
i 1
y make-symbol
y +
y L0
y set!
y reader-next
y dup
y null?
y if
y >>eof
y dup
y L0
y ref
y swap
y +
y L0
y set!
i -1
y get
y '"
y ==
y if
y >>endstring
y <<loop
y @eof
s Unexpected%32end%32of%32input%32in%32string%32near:%32
y L0
y ref
y tostring
y +
y error
y @endstring
y L0
y ref
y dup
y length
i 2
y -
i 1
y swap
y slice
y unmake
y make-string
y LP
i 1
y +
y LP!
W syntax-lambda
L 22
i 0
y make-list
y @loop
y syntax-next
y dup
y null?
y if
y >>eof
y dup
y '}
y ==
y if
y >>closebrace
y append
y <<loop
y @eof
s Unexpected%32end%32of%32input%32inside%32{%32..%32}
y error
y @closebrace
y drop
y make-lambda
y return
W syntax-comment
L 55
i 1
y >L
y @loop
y reader-next
y dup
y null?
y if
y >>eof
y dup
y ')
y ==
y if
y >>closeparen
y dup
y '(
y ==
y if
y >>openparen
y drop
y <<loop
y @closeparen
y LP
y ref
i 1
y -
y LP
y set!
y LP
y ref
i 0
y ==
y if
y >>end
y drop
y <<loop
y @openparen
y LP
y ref
i 1
y +
y LP
y set!
y drop
y <<loop
y @end
y LP
i 1
y +
y LP!
y drop
y syntax-next
y return
y @eof
s Unexpected%32end%32of%32input%32inside%32comment
y error
W for-each
L 33
y >L
y dup
y length
y >L
i 0
y >L
y @loop
y L0
y ref
y L1
y ref
y >=
y if
y >>done
y L0
y ref
y +get
y L2
y ref
y call
y L0
y ref
i 1
y +
y L0
y set!
y <<loop
y @done
y drop
y LP
i 3
y +
y LP!
W serialize-escape-string
L 4
s 
y swap
F
L 57
y unmake
y drop
y dup
i 32
y ==
y if
y >>space
y dup
i 37
y ==
y if
y >>percent
y dup
i 10
y ==
y if
y >>lf
y dup
i 13
y ==
y if
y >>cr
i 1
y make-string
y rot
y swap
y +
y swap
y return
y @space
y drop
y swap
s %32
y +
y swap
y return
y @percent
y drop
y swap
s %37
y +
y swap
y return
y @lf
y drop
y swap
s %10
y +
y swap
y return
y @cr
y drop
y swap
s %13
y +
y swap
y return
y for-each
W serialize-object
L 95
y dup
y null?
y if
y >>null
y dup
y int?
y if
y >>int
y dup
y float?
y if
y >>float
y dup
y bool?
y if
y >>bool
y dup
y string?
y if
y >>string
y dup
y symbol?
y if
y >>symbol
y dup
y list?
y if
y >>list
y dup
y lambda?
y if
y >>lambda
y repr
s Unknown%32obj%32in%32serialize-object:
y swap
y +
y error
y @null
s n
y puts
y CR
y return
y @int
s i
y .
y str
y puts
y CR
y return
y @float
s f
y .
y str
y puts
y CR
y return
y @bool
s b
y .
y str
y puts
y CR
y return
y @string
s s
y .
y serialize-escape-string
y puts
y CR
y return
y @symbol
s y
y .
y repr
y puts
y CR
y return
y @list
s L
y .
y dup
y length
y str
y puts
y CR
F
L 1
y serialize-object
y for-each
y return
y @lambda
s F
y puts
y CR
y unmake
y serialize-object
y return
W save-defined-word
L 8
y swap
i 2
y make-list
y COMPILED_NAMELISTS
y ref
y swap
y append
y drop
W byte-compile
L 30
y var
y COMPILED_NAMELISTS
i 1
i 0
y make-list
y COMPILED_NAMELISTS
y set!
y SP
y >L
y @loop
y syntax-next
y dup
y null?
y if
y >>done
y <<loop
y @done
y drop
y L>
y SP
y -
i 1
y -
y make-list
y '__main__
y save-defined-word
y COMPILED_NAMELISTS
y ref
y del
y COMPILED_NAMELISTS
W byte-compile-file
L 2
y reader-open-file
y byte-compile
W byte-compile-string
L 2
y reader-open-string
y byte-compile
W serialize-compiled-output
L 2
F
L 11
s W
y .
y dup
i 0
y get
y repr
y puts
y CR
i 1
y get
y serialize-object
y for-each
W compile-and-serialize
L 9
y byte-compile-file
s L
y .
y dup
y length
y str
y puts
y CR
y serialize-compiled-output
W compile-and-load-string
L 3
y byte-compile-string
F
L 7
y dup
i 1
y get
y swap
i 0
y get
y make-word
y for-each
W __main__
L 9
y var
y READER_TEXT
i 1
y var
y READER_TEXT_LEN
i 1
y var
y READER_POS
i 1
