
Setting up ports under Windows (native):

NOTE: The below assumes you are running in a Command Prompt shell, NOT Powershell.

Python:
	* Download & install Python 3.x from http://www.python.org
	* cd to verbii source directory
	* setenv.bat
	* cd verb
	* ..\python\verbii.bat run-all-tests.verb
	
Lua:
	* If you DO NOT have Lua installed, see extern/lua/README-FIRST.txt 
		(requires Visual Studio, any recent edition should be fine).
	* cd to verbii source directory
	* setenv.bat
	* cd verb
	* ..\lua\verbii.bat run-all-tests.verb
	
C#:
	* Get .NET SDK x64 6.0 from https://dotnet.microsoft.com/en-us/download
	* cd to verbii source directory
	* setenv.bat
	* cd verb
	* ..\csharp\verbii.bat run-all-tests.verb
	
C/C++:
	** NOTE **
		The C port can be built WITHOUT doing any of the following. However, for best
		performance, it is recommended that you build the Boehm GC as described below.

	** NOTE ** 
		The procedure is the same for C or C++, but the following assumes the C++ path.
	   	To build for C just change 'cpp' to 'c' in pathnames below.

	* Install Visual Studio (tested with 2022 Community Edition / 17.3)
		* Include components:
			- MSVC vNNN ...
			- Windows 10 SDK
			- [Optional] Just in time debugger
			- C++ CMake tools
			
	* Get libgc source from: https://github.com/ivmai/bdwgc/releases
		* Latest tested version = 8.0.8
		
	* Unpack libgc sources under verbii/cpp/, which will give you e.g. verbii/cpp/gc-8.0.6
	  Rename folder to libgc, so that it is now verbii/cpp/libgc
	
	* Get libatomic_ops from: https://github.com/ivmai/libatomic_ops/releases/
		* Latest test version = 7.6.14
		
	* Unpack libatomic_ops under verbii/cpp/libgc which will give you e.g. verbii/cpp/libgc/libatomic_ops-7.6.12
	  Rename folder to: verbii/cpp/libgc/libatomic_ops
	  
	* From Start menu, open Visual Studio 2022 -> x64 Native Tools Command Prompt
	
		** IMPORTANT - make sure to use the x64 native tools, otherwise libgc will be
	       built as 32 bit and won't link with the verbii executable
	
		Start in the verbii root folder
		
		$ setenv.bat
		
		$ cd cpp\libgc
		$ nmake -f NT_MAKEFILE cpu=amd64
		$ copy gc64.dll ..
		$ cd ..
		$ vc-setup.bat
		$ vc-make.bat
	
		* Test
		$ cd ..\verb
		$ ..\cpp\verbii.bat run-all-tests.verb
		
	
	
