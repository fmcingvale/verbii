\ Test sorting functions
\
\ Copyright (c) 2022 Frank McIngvale, see LICENSE

: *generic-test-sorting ( sortfunc )
	[ -4 -3 5 10 20 ]
	[ 10 -4 5 20 -3 ] { } sortfunc call expect==
	
	[ -100 -80 -40 -30 20 50 80 90 100 ]
	[ 100 90 80 50 20 -30 -40 -80 -100 ] { } sortfunc call expect==

	\ test that sort preserves order of equal elements
	[ [ -20 6 ] [ -20 -3 ] [ 20 4 ] [ 20 -8 ] [ 100 5 ] [ 100 -1 ] ]
	[ [ 100 5 ] [ 20 4 ] [ -20 6 ] [ 100 -1 ] [ 20 -8 ] [ -20 -3 ] ] { 0 get } sortfunc call expect==
	 
	\ multi-key sorting, taking advantage of stable sorting, preserving relative position of equal elements
	@locals [ biglist list2 ]
	[
		[ 2 -8 "A" ]
		[ 3 14 "B" ]
		[ 2 -10 "C" ]
		[ 4 -11 "C" ]
		[ 2 5  "B" ]
		[ 1 3  "C" ]
		[ 3 -12 "A" ]
		[ 1	-4 "A" ]
		[ 4 -7 "B" ]
		[ 1 8  "B" ]
		[ 4 14 "A" ]
		[ 3 -9 "C" ]
	] biglist!
	
	\ sort by number (yielding [ 1 .. ] [ 1 .. ] [ 2 .. ] [ 2 .. ] ...)
	biglist { 0 get } sortfunc call list2!
	[ [ 1 3 "C" ] [ 1 -4 "A" ] [ 1 8 "B" ] [ 2 -8 "A" ] [ 2 -10 "C" ] [ 2 5 "B" ] [ 3 14 "B" ] [ 3 -12 "A" ] [ 3 -9 "C" ] [ 4 -11 "C" ] [ 4 -7 "B" ] [ 4 14 "A" ] ]
	list2 expect==
	\ now sort by letter, maintaining relative position of the numbers,
	\ this yields [ 1 .. "A" ] [ 2 .. "A" ] [ 3 .. "A" ] [ 1 .. "B" ] ...
	[ [ 1 -4 "A" ] [ 2 -8 "A" ] [ 3 -12 "A" ] [ 4 14 "A" ] [ 1 8 "B" ] [ 2 5 "B" ] [ 3 14 "B" ] [ 4 -7 "B" ] [ 1 3 "C" ] [ 2 -10 "C" ] [ 3 -9 "C" ] [ 4 -11 "C" ] ]
	list2 { 2 get } sortfunc call expect==
	
	\ this time, sort by letter first -> [ .. "A" ] [ .. "A ] ... [ .. "B" ] ...
	biglist { 2 get } sortfunc call list2!
	[ [ 2 -8 "A" ] [ 3 -12 "A" ] [ 1 -4 "A" ] [ 4 14 "A" ] [ 3 14 "B" ] [ 2 5 "B" ] [ 4 -7 "B" ] [ 1 8 "B" ] [ 2 -10 "C" ] [ 4 -11 "C" ] [ 1 3 "C" ] [ 3 -9 "C" ] ]
	list2 expect==
	\ now sort by number, yielding [ 1 .. "A" ] [ 1 .. "B" ] [ 1 .. "C" ] [ 2 .. "A" ] ...
	[ [ 1 -4 "A" ] [ 1 8 "B" ] [ 1 3 "C" ] [ 2 -8 "A" ] [ 2 5 "B" ] [ 2 -10 "C" ] [ 3 -12 "A" ] [ 3 14 "B" ] [ 3 -9 "C" ] [ 4 14 "A" ] [ 4 -7 "B" ] [ 4 -11 "C" ] ]
	list2 { 0 get } sortfunc call expect==
	;
	
: test-sorting-mergesort
	{ mergesort } *generic-test-sorting
	;
	
: test-sorting-quicksort
	{ quicksort } *generic-test-sorting
	;

		