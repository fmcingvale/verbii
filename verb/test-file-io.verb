\ File I/O testing
\
\ Copyright (c) 2022 Frank McIngvale, see LICENSE

: test-file-io
	"temp-out.txt" file-delete
	"temp-out.txt" file-exists? expect-false
	\ make sure deleting non-existant file doesn't raise an error
	"temp-out.txt" file-delete

	"temp-out.txt" "hello-file-write" file-write
	"hello-file-write" "temp-out.txt" file-read expect==

	"temp-out.txt" file-exists? expect-true
	"temp-out.txt" file-delete
	"temp-out.txt" file-exists? expect-false

	\ make sure append creates file
	"temp-out.txt" "*hello" file-append
	"temp-out.txt" file-exists? expect-true
	"temp-out.txt" "*file" file-append
	"temp-out.txt" "*append" file-append

	"*hello*file*append" "temp-out.txt" file-read expect==

	\ finally, use write to create (without deleting first!), then append more

	"temp-out.txt" file-exists? expect-true
	"temp-out.txt" "//hello" file-write
	"temp-out.txt" "//file" file-append
	"temp-out.txt" "//write+append" file-append

	"//hello//file//write+append" "temp-out.txt" file-read expect==

	\ without deleting, make sure open-as-stdout creates as new
	"temp-out.txt" open-as-stdout
	"hello" puts
	"-----" puts
	"stdout" puts
	void open-as-stdout

	"hello-----stdout" "temp-out.txt" file-read expect==
	
	\ test that no auto text conversion is happening
	@locals [ s d ]
	"abc" s!
	s 13 chr + 10 chr + s!
	s "def" + s!
	s 10 chr + s!
	s "ghi" + s!
	s 13 chr + s!
	s "jkl" + s!
	"temp-out.txt" s file-write
	
	"temp-out.txt" file-read d!
	16 d length expect==
	13 d 3 get ord expect==
	10 d 4 get ord expect==
	10 d 8 get ord expect==
	13 d 12 get ord expect==
	;
	