Global TODO

* ALL PORTS: Syntax "if >>true >>false" -- don't need to parse false_jump since program will always continue there 
  on false without doing anything

* Add string type

	* I'm thinking ." should be deprecated in favor of "string" . since that is 
	  what ." does internally now

* After strings added, add 'error' to cause program exit with message
	* change string parser to look for " at start/end of words, instead of as
	separate words

* After above, make expect-f exit test when %diff too large

* More expect-* things to further automate unittests

* More error checking of input types in library/tests/demos

* 63-bit integers
	* or ... maybe 52 since some host languages use floats for ints??

* add lists
	* this will enable things like closures where a list can be bound to lambda
	and add an 'apply' that's like call except it pushes the bound list first

* add bit level operations -- limit to 32 bits
	* add random number generator (pcg32)

* improve exp by reducing x like dividing by 100,1000,1e6,etc. and adjusting
  at end since values for powers of 10 can be in a table (exp algorithm seems
  to have trouble with larger values)
  
* should delete comments from source as read so they don't have to be reparsed on every pass

* add cmdline params: -stack -locals -heap to give values for memory sizes

* Lua: remove obsolete code

* rename CallableWordList in python port for consistency

* sort out usage of null/NULL/'void' in ports for consistency. add some unittests
that include null to make sure it is handled correctly. also make sure voids are 
never visible from verbii code

* add a "where" parameter to all 'popOrFail' type functions to give context on errors

* mae sure no ports still looking for false_jump after 'if'


