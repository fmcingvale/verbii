Global TODO

* More error checking of input types in library/tests/demos

* add bit level operations -- limit to 32 bits
	* add random number generator (pcg32)

* improve exp by reducing x like dividing by 100,1000,1e6,etc. and adjusting
  at end since values for powers of 10 can be in a table (exp algorithm seems
  to have trouble with larger values)
  
* sort out usage of null/NULL/'void' in ports for consistency. add some unittests
that include null to make sure it is handled correctly. also make sure voids are 
never visible from verbii code

* shouldn't syntax-next return void on end of input instead of null? check/change across ports.
	* actually not -- 'null' has no literal form so cannot be serialized nor found in a source file.
		so returning null is fine.
	* update serializer/deserialize to remove null handling since it should never be possible

* 'var NAME' and 'del NAME' should be syntax in compiler, rewritten to 'NAME count var and 'NAME del so they can be implemented outside of interpreter correctly

* make sure ports all implement the same builtins (c++ has more that are not in other ports right now)

* add open-input-file, open-output-file, open-string, read-line, read-char, write-string, write-char ... basically I/O with ports concept like scheme

* why does chicken port report more userwords when running same code as other ports?

* think str & repr need to change so that symbols get ' for repr (i.e. 'stack display') and are
  printed without ' for str ('print format'). this matches i.e. scheme when printing symbols
  and fits with the "the stack display should identify the data-type" idea.
  
* the L0,L1, etc should become:
	: L3 LP 3 + ref ;
	: L3! LP 3 + set! ;

* chicken: replace Lang* with * 
		main interpreter loop -- use while instead having to place recursive calls everywhere

* pick should be 0-based for consistency with other 0-indexed functions

* in native.* the pop* functions should take a 'where' argument like chicken

* .dumpword needs to be fixed to deepcopy as well