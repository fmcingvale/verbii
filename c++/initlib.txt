
def . repr 32 .c ;
def CR ( -- , prints CR LF ) 10 .c 13 .c ;
def clear ( xn ... x1 -- ) SP depth + 1 - SP! ;

def drop ( a -- ) SP 1 + SP! ; 
def dup ( a -- a a ) SP ref ; 
def dup? ( a -- a a, only if a != 0 ) dup 0 == if >>ZERO dup @ZERO ; 
def swap ( a b -- b a ) >L >L LP 1 + ref LP ref LP 2 + LP! ; 
def pick ( Sn .. S1 i -- Sn .. S1 Si ) SP + ref ; 

def over ( a b -- a b a ) SP 1 + ref ; 
def 2dup ( a b -- a b a b ) over over ; 
def 2drop ( a b -- ) SP 2 + SP! ; 
def 2over ( a b c d -- a b c d a b ) 4 pick 4 pick ; 
def 2swap ( a b c d -- c d a b ) 
    >L >L >L >L  
    LP 2 + ref LP 3 + ref LP ref LP 1 + ref LP 4 + LP! ; 

def true ( -- true ) 1 1 == ;
def false ( -- false ) 1 0 == ;


